// Icon Button
// -----------------------
// All this class does is set the colors for icons and evenly distribute the spacing

.button-icon {
  @extend %button;
  color: $button-icon-color;
  background: #f4f4f4;
  border-color: #d8d8d8; // We can't use button-default-* variables because they are reused by other styles other than button-icon (such as color-picker)
  padding: 0;
  width: $button-icon-size;
  min-width: $button-icon-size;

  &:hover,
  &:active,
  &.is-active,
  &.active,
  .open &.dropdown-toggle {
    border-color: $button-icon-hover-border;
    //See comment on background color below
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #F5F5F5;
  }

  // Have to adjust the pressed background color for default button since
  // its a bit too light
  &:active,
  &.is-active,
  &.active,
  .open &.dropdown-toggle {
    background: linear-gradient(0deg, #DCDCDC, #DCDCDC), #F5F5F5;
    //TODO in figma, we have the value specified via linear gradient, which isn't ideal.
    // As designers, we need to either specify a hex value or, if we were to keep using ice-adjust-color(),
    // what would be the color and decimal passed in?
    //background-color: ice-adjust-color($button-default-bg-color, -0.5);
  }

  &:focus {
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)), #F5F5F5;
    //box-sizing: border-box; //pending design input
    //box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.5);
  }

  img {
    height: $button-icon-img-size;
  }
}
